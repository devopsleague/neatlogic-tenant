<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.tenant.dao.mapper.RoleMapper">

	<select id="selectAllRole" resultType="codedriver.framework.dto.RoleVo">
		select
		a.`name` as name,
		a.description as description,
		(SELECT COUNT(1) FROM user_role b JOIN user c ON b.user_id = c.user_id WHERE b.role_name = a.name) AS userCount
		from role a
		order by a.`name`
	</select>
	
	<select id="getRoleByName" resultType="codedriver.framework.dto.RoleVo" parameterType="codedriver.framework.dto.RoleVo">
		select
		a.`name` as name,
		a.description as description,
		(SELECT COUNT(1) FROM user_role b JOIN user c ON b.user_id = c.user_id WHERE b.role_name = a.name) AS userCount
		from role a
		where a.name like concat("%",#{name},"%") or a.description like concat("%",#{name},"%")
		order by a.`name`
	</select>
	
	<select id="viewUsers" parameterType="codedriver.framework.dto.UserVo" resultType="codedriver.framework.dto.UserVo">
		SELECT
		b.user_id AS userId,
		b.user_name AS UserName
		FROM user_role a JOIN user b ON a.user_id = b.user_id
		WHERE 1=1
		<if test="roleName != null and roleName != ''">
			AND a.role_name = #{roleName}
		</if>
		<if test="userId != null and userId != ''">
			AND b.user_id = #{userId}
		</if>
	</select>
	
	<select id="getRoleInfoByName" parameterType="java.lang.String" resultType="codedriver.framework.dto.RoleVo">
		SELECT
		`name` AS name,
		`description` AS description
		FROM
		`role`
		WHERE name = #{name}
	</select>
	
	<select id="selectRoleTeamList" parameterType="codedriver.framework.dto.TeamVo" resultType="codedriver.framework.dto.TeamVo">
		SELECT distinct
		t.uuid,
		t.name,
		t.description ,
		t.time_id as timeId,
		t.parent_id as parentId,
		(SELECT COUNT(1) FROM flow_team WHERE lft &gt; t.lft AND rht &lt; t.rht) AS childCount,
		tr.role_name as roleName,
		t.lft,
		t.rht
		FROM
		team t
		<if test="roleName != null and  roleName!='' ">
		LEFT JOIN team_role tr ON tr.team_uuid = t.uuid AND tr.role_name = #{roleName}
		</if>
		WHERE
		t.id &gt;0
		<if test="uuid != null">
			AND t.uuid = #{uuid}
		</if>
		<if test='parentId != null'>
			AND t.parent_id = #{parentId}
		</if>
		ORDER BY lft ASC
	</select>
	
	<select id="checkRoleNameExist" parameterType="codedriver.framework.dto.RoleVo" resultType="int">
		select count(1) from role where `name` = #{name}
	</select>	
	
	<insert id="insertRole" parameterType="codedriver.framework.dto.RoleVo">
		insert into role (name , description)
		values (#{name}, #{description})
	</insert>
	
	<insert id="insertTeamRole" parameterType="java.util.List">
		insert into team_role (team_uuid , role_name)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.teamUuId},#{item.roleName})
		</foreach>
	</insert>
	
	<insert id="insertTeamChildrenRole">
		REPLACE INTO team_role
		SELECT distinct
		ct.id,
		r.role_name
		FROM flow_team ct
		JOIN flow_team pt ON pt.uuid = #{parentId}
		JOIN flow_role r ON
		r.id = #{roleId}
		WHERE ct.lft > pt.lft
		AND ct.rht &lt; pt.rht
	</insert>
	
	<update id="updateRole" parameterType="codedriver.framework.dto.RoleVo">
		UPDATE role
		SET description = #{description}
		WHERE `name` = #{name}
	</update>
	
	<delete id="deleteRole" parameterType="java.lang.String">
		DELETE a,b,c,d FROM role a LEFT JOIN url_role b ON a.name = b.role_name
    	LEFT JOIN user_role c ON a.name = c.role_name
    	LEFT JOIN team_role d ON a.name = d.role_name
    	WHERE a.name = #{name}
	</delete>
	
	<delete id="deleteTeamRoleByRoleName" parameterType="java.lang.String">
		delete from team_role where role_name = #{name}
	</delete>
</mapper>